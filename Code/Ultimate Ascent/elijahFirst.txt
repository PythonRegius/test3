#include "WPILib.h"


class RobotDemo : public SimpleRobot
{
	RobotDrive *drive; 
	Joystick *controller;
	DriverStation *ds;
	Jaguar *climb, *shoot;
	Victor *load;
	Compressor *comp;
	Solenoid *leftout, *leftin, *rightout, *rightin;

public:
	RobotDemo(void)
	{
		GetWatchdog().Kill(); 
		drive = new RobotDrive(1, 2, 3, 4);
		controller = new Joystick(1);
		
		climb = new Jaguar (5);
		shoot = new Jaguar (6);
		load = new Victor (7);
		
		comp = new Compressor (4, 1);
		leftout = new Solenoid (1);
		leftin = new Solenoid (2);
		rightout = new Solenoid (3);
		rightin = new Solenoid (4);
		
		AxisCamera &camera = AxisCamera::GetInstance();
		camera.WriteResolution(AxisCamera::kResolution_320x240);
		camera.WriteCompression(20);
		camera.WriteBrightness(0);
		
		
//		drive->SetInvertedMotor(RobotDrive::kFrontRightMotor, true);
//		drive->SetInvertedMotor(RobotDrive::kRearRightMotor, true);
		drive->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
		drive->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
			
	}

	void Autonomous(void)
	{
		GetWatchdog().Kill();
		drive->Drive(0.0, 0.0);
		shoot->Set(true);
			Wait (1.0);
		load->Set(0.5);
			Wait (0.2);
		load->Set(0.0);
			Wait (5.0);
		load->Set(0.5);
			Wait (0.2);
		load->Set(0.0);
			Wait (5.0);
		load->Set(0.5);
			Wait (0.2);
		load->Set(0.0);
			Wait (3.0);
		shoot->Set(false);
	}

	void OperatorControl(void)
{
		comp->Start();
				
		while (IsOperatorControl())
	{
		drive->MecanumDrive_Cartesian(controller->GetX(), controller->GetY(), controller->GetZ(), 0);
			Wait (0.005);
					
			if(controller->GetRawButton(1)) // shoot one frisbee then reload
			{
					shoot->Set(true);
						Wait (1.0);
					load->Set(0.5);
						Wait (0.2);
					load->Set(0.0);						
			}else
			{
					shoot->Set(false);
					load->Set(false);
			}if(controller->GetRawButton(2)) // shoot all frisbees
			{
					shoot->Set(true);
						Wait (1.0);
					load->Set(0.5);
						Wait (0.2);
					load->Set(0.0);
						Wait (5.0);
					load->Set(0.5);
						Wait (0.2);
					load->Set(0.0);
						Wait (5.0);
					load->Set(0.5);
						Wait (0.2);
					load->Set(0.0);
						Wait (0.2);
					load->Set(0.5);
						Wait (0.2);
					load->Set(0.0);
			
			}else
			{
					shoot->Set(false);
					load->Set(false);
			}if(controller->GetRawButton(6))
			{
				leftout->Set(true);
				leftin->Set(false);
				rightout->Set(true);
				rightin->Set(false);
			}else if(controller->GetRawButton(8))
			{
				leftout->Set(false);
				leftin->Set(true);
				rightout->Set(false);
				rightin->Set(true);
			}else
			{
				leftout->Set(false);
				leftin->Set(true);
				rightout->Set(false);
				rightin->Set(true);
			}if(controller->GetRawButton(5))
			{
				climb->Set(0.5);
			}else if(controller->GetRawButton(7))
			{
				climb->Set(-0.5);
			}else
			{
				climb->Set(0.0);
			}
		}
	}
};

START_ROBOT_CLASS(RobotDemo);

